########### 每个指令必须有分号结束。#################
user nginx;  #配置用户或者组，默认为nobody nobody。
worker_processes 2;  #允许生成的进程数，默认为1

worker_rlimit_nofile 524288; # nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（ulimit -n）与nginx进程数相除

#pid /nginx/pid/nginx.pid;   #指定nginx进程运行文件存放地址
error_log /var/log/nginx/error.log debug;  #制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg

events {
    accept_mutex on;    # 设置网路连接序列化，防止惊群现象发生，默认为on
    multi_accept on;    # 设置一个进程是否同时接受多个网络连接，默认为off
    #use epoll;         # 事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport
    worker_connections  65535;    #最大连接数，默认为512
}
http {
    include       mime.types;   #文件扩展名与文件类型映射表
    default_type  application/octet-stream; #默认文件类型，默认为text/plain
    #access_log off; #取消服务日志    
    log_format myFormat '$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'; #自定义格式
    access_log /var/log/nginx/access.log myFormat;  #combined为日志格式的默认值
    sendfile on;   #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。
    # tcp_nopush on;
    sendfile_max_chunk 100k;  #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。
    # tcp_nopush on # 必须在sendfile开启模式才有效，防止网路阻塞，积极的减少网络报文段的数量（将响应头和正文的开始部分一起发送，而不一个接一个的发送。）
    keepalive_timeout 65;  #连接超时时间，默认为75s，可以在http，server，location块。
    client_header_buffer_size 4k; # 客户端请求头部的缓冲区大小，这个可以根据你的系统分页大小来设置
    # upstream mysvr {   
    #   server 127.0.0.1:7878;
    #   server 192.168.10.121:3333 backup;  #热备
    # }
    # error_page 404 https://www.baidu.com; #错误页
    # server {
    #     keepalive_requests 120; #单连接请求上限次数。
    #     listen       4545;   #监听端口
    #     server_name  127.0.0.1;   #监听地址       
    #     location  ~*^.+$ {       #请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。
    #        #root path;  #根目录
    #        #index vv.txt;  #设置默认页
    #        proxy_pass  http://mysvr;  #请求转向mysvr 定义的服务器列表
    #        deny 127.0.0.1;  #拒绝的ip
    #        allow 172.18.5.54; #允许的ip           
    #     } 
    # }
    gzip on;  # 开启压缩
    # gzip_min_length 1k;   # 设置压缩最小单位，小于不压缩
    # gzip_disable "msie6";
    # gzip_static off       # nginx对于静态文件的处理模块,可提前压缩静态文件为.gz结尾节省CPU压缩消耗

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 4;    # 压缩比
    # gzip_buffers 4 16k;  
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;  压缩内容

    include /etc/nginx/conf.d/*.conf;
}
